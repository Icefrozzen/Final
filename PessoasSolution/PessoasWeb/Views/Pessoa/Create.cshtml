@using PessoasWeb.Models
@model Pessoa
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="../../favicon.ico">
    <title>Cadastrar</title>
    <!-- Bootstrap core CSS -->
    <link href="~/Content/bootstrap.min.css" rel="stylesheet">

    <link href="~/Content/SimpleSideBar.css" rel="stylesheet">

    <script src="~/scripts/modal.js"></script>

</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-md-4 col-md-offset-4">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <h5 class="text-center">
                            SIGN UP
                        </h5>
                        <form class="form form-signup" role="form" action="~/Pessoa/Create" method="post">
                            <div class="form-group">
                                @Html.LabelFor(e => e.Nome, new { @class = "control-label" })
                                <div class="input-group">
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-user"></span></span>
                                    @*<input type="text" class="form-control" name="Name" placeholder="Name" />*@
                                    @Html.TextBoxFor(e => e.Nome, new { @class = "form-control", @placeholder = "First Name", @required = "required" })
                                </div>
                                @Html.ValidationMessageFor(e => e.Nome)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(e => e.Email, new { @class = "control-label" })
                                <div class="input-group">
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-envelope"></span>
                                    </span>
                                    @*<input type="text" class="form-control" name="Email" placeholder="Email Address" />*@
                                    @Html.TextBoxFor(e => e.Email, new { @class = "form-control", @type = "email", @placeholder = "E-mail", @required = "required" })
                                </div>
                                @Html.ValidationMessageFor(e => e.Email)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(e => e.DataNascimento, new { @class = "control-label" })
                                <div class="input-group">
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span></span>
                                    @*<input type="date" class="form-control" name="DataNasc" placeholder="Age" />*@
                                    @Html.TextBoxFor(e => e.DataNascimento, "{0:MM/dd/yyyy}", new { @class = "form-control date", @type = "date", @placeholder = "Date of Birth", @required = "required" })
                                </div>
                                @Html.ValidationMessageFor(e => e.DataNascimento)
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(e => e.Senha, new { @class = "control-label" })
                                <div class="input-group">
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-lock"></span></span>
                                    @*<input type="password" class="form-control" name="Senha" placeholder="Password" />*@
                                    @Html.PasswordFor(e => e.Senha, new { @class = "form-control", @placeholder = "Password", @required = "required", @pattern = ".{6,}", id = "password" })
                                </div>
                                @Html.ValidationMessageFor(e => e.Senha)
                            </div>
                            <div class="form-group">
                                <label for="ConfSenha" class="control-label">Confirm Password</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-lock"></span></span>
                                    <input type="password" class="form-control" name="ConfSenha" placeholder="Confirm Password" pattern=".{6,}" id="confirm_password" />
                                </div>
                            </div>
                            <button type="submit" class="btn btn-sm btn-primary btn-block" role="button">
                                SUBMIT
                            </button>
                            <h5> Already have an account? <a href="/Pessoa/Entrar"> Log In </a> </h5>
                        </form>

                        <script>
                        var password = document.getElementById("password")
                        , confirm_password = document.getElementById("confirm_password");

                        function validatePassword() {
                            if (password.value != confirm_password.value) {
                                confirm_password.setCustomValidity("Passwords Don't Match");
                            } else {
                                confirm_password.setCustomValidity('');
                            }
                        }

                        password.onchange = validatePassword;
                        confirm_password.onkeyup = validatePassword;
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /container -->
    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
    <script src="/scripts/ie10-viewport-bug-workaround.js"></script>
</body>
</html>
